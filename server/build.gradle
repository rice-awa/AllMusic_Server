plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

def getVersionFromFile() {
    def versionFile = file('../version')
    if (versionFile.exists()) {
        return versionFile.text.trim()
    } else {
        throw new GradleException("Version file not found: ${versionFile.absolutePath}")
    }
}

version = getVersionFromFile()

archivesBaseName = "[bukkit_spigot_paper]AllMusic_Server"

repositories {
    mavenCentral()

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/groups/public'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url ' https://mvnrepository.com/artifact/mysql/mysql-connector-java'
    }
    maven {
        url 'https://maven.citizensnpcs.co/repo'
    }
    maven {
        name 'velocity'
        url 'https://nexus.velocitypowered.com/repository/maven-public/'
    }
}

dependencies {
    //implementation "org.apache.commons:commons-dbcp2:2.9.0"
    //implementation 'mysql:mysql-connector-java:8.0.31'

    compileOnly 'org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT'
    //compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7.1"
    //compileOnly 'com.velocitypowered:velocity-api:3.0.0'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    //compileOnly 'net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT'
//    compileOnly fileTree(dir:'lib',include:['*.jar'])

    //implementation 'org.xerial:sqlite-jdbc:3.48.0.0'
    compile 'com.squareup.okhttp3:okhttp:4.12.0'
    compile 'com.google.code.gson:gson:2.10.1'

    //annotationProcessor 'com.velocitypowered:velocity-api:3.0.0'
}

shadowJar {
    relocate 'okhttp3', 'com.coloryr.allmusic.server.lib.okhttp3'
    relocate 'okio', 'com.coloryr.allmusic.server.lib.okio'
    relocate 'kotlin', 'com.coloryr.allmusic.server.lib.kotlin'
    relocate 'org.intellij', 'com.coloryr.allmusic.server.lib.org.intellij'
    relocate 'org.jetbrains', 'com.coloryr.allmusic.server.lib.org.jetbrains'
    relocate 'com.google.gson', 'com.coloryr.allmusic.server.lib.com.google.gson'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property "version", project.version

    filesMatching("plugin.yml") {
        expand "version": project.version
    }
}